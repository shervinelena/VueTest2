{"version":3,"sources":["main.js"],"names":["Vue","config","productionTip","app","el","data","message","emoticon","letter","methods","translate","word","fetch","options","method","body","JSON","stringify","response","console","log","status","text","result","reset","run","originalMessage","split"],"mappings":"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","file":"main.6f56c167.js","sourceRoot":"..","sourcesContent":["Vue.config.productionTip = false;\nvar app = new Vue({\n  el: \"#app\",\n  data: {\n    message: \"Free hot dogs on Monday!\",\n    emoticon: \"ðŸ˜„\",\n    letter: \"o\"\n  },\n  methods: {\n    // Modify to translate each word in sentence.\n    translate: async function(word) {\n      let url =\n        \"https://alset.azurewebsites.net/api/go?code=6Y8V2MvVrfCVUIHEIGczJTkffUgQ5IflaHkz9w1peu82c/Cc0BzTvQ==\";\n      //let response = await fetch(url);\n      let options = {\n        word: word,\n        letter: this.letter,\n        emoticon: this.emoticon\n      };\n\n      let response = await fetch(url, {\n        method: \"post\",\n        body: JSON.stringify(options)\n      });\n\n      console.log(response.status);\n      //console.log(resposne.text()); // won't work. text() is async\n      let result = await response.text();\n      // let result = await response.json();\n      console.log(result);\n      return result;\n    },\n    reset: function() {\n      this.message = \"Free hot dogs on Monday!\";\n    },\n    run: async function() {\n      let result = \"\";\n      // Wait on each promise to be resolved in serial.\n      let originalMessage = this.message;\n      for (let word of originalMessage.split(\" \")) {\n        this.message = \"(translating \" + word + \")\";\n        result += (await this.translate(word)) + \" \";\n      }\n      this.message = result;\n    }\n  }\n});\n"]}